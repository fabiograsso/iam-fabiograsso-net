services:

  hugo:
    image: docker.io/hugomods/hugo:std-exts
    working_dir: /src
    volumes:
      - ./:/src
    platform: linux/amd64 # Workaround for compatibility with MacOS
    ports:
      - "${HUGO_PORT:-1313}:${HUGO_PORT:-1313}"
   #command: server -D --bind 0.0.0.0 --baseURL http://localhost --disableFastRender --logLevel debug -p ${HUGO_PORT:-1313}
    command: server -D --bind 0.0.0.0 --baseURL http://localhost --disableFastRender --logLevel debug -p ${HUGO_PORT:-1313}
    networks:
      - hugonet

  https-proxy:
    image: nginx:alpine
    ports:
      - "443:443"
      - "80:80"
    configs:
      - source: nginx_config
        target: /etc/nginx/nginx.conf
    command: >
      sh -c "
      apk add --no-cache openssl &&
      openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/server.key -out /tmp/server.crt -subj '/CN=localhost' &&
      nginx -g 'daemon off;'
      "
    networks:
      - hugonet


  decap-proxy:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./:/app
    environment:
      - PORT=${DECAP_PORT:-1314}
      - GIT_REPO_DIRECTORY=/app
      - NODE_ENV=development
    ports:
      - "${DECAP_PORT:-1314}:${DECAP_PORT:-1314}"
    command: sh -c "npx decap-server"
    networks:
      - hugonet

networks:
  hugonet:
    driver: bridge


configs:
  nginx_config:
    content: |
      events {
          worker_connections 1024;
      }
      http {
          map $$http_upgrade $$connection_upgrade {
              default upgrade;
              '' close;
          }
          
          upstream hugo {
              server hugo:1313;
          }
          upstream decap {
              server decap-proxy:1314;
          }
          
          # HTTP to HTTPS redirect
          server {
              listen 80;
              server_name localhost;
              return 301 https://$$server_name$$request_uri;
          }
          
          # HTTPS Server
          server {
              listen 443 ssl;
              server_name localhost;
              ssl_certificate /tmp/server.crt;
              ssl_certificate_key /tmp/server.key;
              ssl_protocols TLSv1.2 TLSv1.3;
              ssl_ciphers HIGH:!aNULL:!MD5;
              
              # Force all HTTP links in headers and redirects to HTTPS
              proxy_redirect http:// https://;
              
              # Hugo main site
              location / {
                  proxy_pass http://hugo;
                  proxy_set_header Host $$host;
                  proxy_set_header X-Real-IP $$remote_addr;
                  proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $$scheme;
                  
                  # WebSocket support for Hugo live reload
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $$http_upgrade;
                  proxy_set_header Connection $$connection_upgrade;
                  
                  # Redirect HTTP to HTTPS in headers
                  proxy_redirect http:// https://;
                  
                  # Disable compression to allow content modification
                  proxy_set_header Accept-Encoding "";
                  
                  # Replace HTTP with HTTPS in HTML content
                  sub_filter_types text/html text/css application/javascript;
                  sub_filter 'http://localhost:${HUGO_PORT:-1313}' 'https://localhost';
                  sub_filter_once off;
                  
                  # Timeout for WebSocket
                  proxy_read_timeout 86400s;
                  proxy_send_timeout 86400s;
              }
              
              # Decap CMS  
              location /admin/ {
                  proxy_pass http://decap/;
                  proxy_set_header Host $$host;
                  proxy_set_header X-Real-IP $$remote_addr;
                  proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $$scheme;
              }
          }
      }
